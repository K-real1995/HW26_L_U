# Есть список состоящий из элементов 0 и 1. Например [0, 0, 0, 1, 0, 1] он может быть любой величины и содержать любое
# количество нулей и единиц. Представьте что этот список моделирует ряд в кинотеатре где 0 - место не занято,
# 1 - место занято. Необходимо найти номер незанятого сидения (индекс элемента) при посадке на которое мы будем
# максимально удалены от других сидящих посетителей.
#
# Требования по памяти: O(1) - количество занимаемой дополнительными переменными памяти не изменяется в зависимости
# от размера переданного списка
#
# Требования по алгоритмической сложности - O(n) - один проход по списку

# Вводить числа без скобок, через запятую
row = list(map(int, input().split(',')))
counter = 0

place = {}

for i in range(0, len(row)):
    if row[i] == 0:
        counter += 1
    else:
        place[i - 1] = counter / 2
        counter = 0

max_place = max(place, key=place.get)
need_place = round(max_place - place.get(max_place)/2)
print("Самое удаленное место от других сидящих посетителей:", need_place)

